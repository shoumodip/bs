io.println([1, 2, 3, 4, 5].map(fn (x) => x * 2))
io.println([1, 2, 3, 4, 5].filter(fn (x) => x % 2 == 0))
io.println([1, 2, 3, 4, 5].reduce(fn (x, y) => x + y))
io.println([1, 2, 3, 4, 5].reduce(fn (x, y) => x + y, 20))

{
    var xs = [1, 2, 3, 4, 5]
    var ys = [..xs]
    var zs = xs

    io.println("xs = {xs}")
    io.println("ys = {ys}")
    io.println("zs = {zs}")

    xs[0] = 69

    io.println("xs = {xs}")
    io.println("ys = {ys}")
    io.println("zs = {zs}")
}

io.println([1, 2, 3, 4, 2].find(2))
io.println([1, 2, 3, 4, 2].find(2, 2))

{
    var xs = [1, 2, 3, 4, 5]
    var ys = [1, 2, 3, 4, 5]

    io.println(xs == xs)
    io.println(xs == ys)
    xs[0] = 69
    io.println(xs == ys)
}

{
    var xs = [2, 5, 1, 4, 3]
    io.println("Before:", xs)
    io.println("Return:", xs.sort(fn (x, y) => x < y))
    io.println("Final: ", xs)
}

{
    var xs = [2, 5, 1, 4, 3]
    io.println("Before:", xs)
    io.println("Return:", xs.reverse())
    io.println("Final: ", xs)
}

{
    var xs = [1, 2, 3, 4, 5]
    var count = len(xs)

    io.println(xs)
    for i in 0, 5 {
        xs[len(xs)] = "Temp #" $ i
    }

    io.println(xs)
    xs.resize(count)
    io.println(xs)
    xs.resize(count * 2)
    io.println(xs)
}

{
    var xs = [1, 2, 3, 4, 5]
    io.println(xs)
    io.println(xs.slice(2))
    io.println(xs.slice(1, 3))
}

{
    var xs = [1, 2, 3, 4, 5]
    var ys = [6, 7, 8, 9, 10]
    io.println(xs)
    io.println(xs.append(ys))
}
