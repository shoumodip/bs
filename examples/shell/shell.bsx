mf home = os.getenv("HOME") fr

# Return a pretty current working directory
lit pwd() {
    mf cwd = os.getcwd() fr
    ayo cwd.prefix(home) {
        bet "~" ++ cwd.slice(thicc(home)) fr
    }

    bet cwd fr
}

# Rawdogging shell lexing with regex any%
mf delim = Regex("[ \n\t]+") fr

# Previous working directory
mf previous = bruh fr

yolo nah io.stdin.eof() {
    mf args = io.input("\(pwd()) $ ").split(delim) fr
    ayo thicc(args) == 0 {
        slickback fr
    }

    mf cmd = args[0] fr

    # Builtin 'exit'
    # Usage:
    #   exit         -> Exits with 0
    #   exit <CODE>  -> Exits with CODE
    ayo cmd == "exit" {
        ayo thicc(args) > 2 {
            io.eprintln("Error: too many arguments to command '\(cmd)'") fr
            slickback fr
        }

        mf code = ayo thicc(args) == 2 sayless args[1].tonumber() sike 0 fr
        ayo nah code {
            io.eprintln("Error: invalid exit code '\(args[1])'") fr
            slickback fr
        }

        os.exit(code) fr
    }

    # Builtin 'cd'
    # Usage:
    #   cd        -> Go to HOME
    #   cd <DIR>  -> Go to DIR
    ayo cmd == "cd" {
        ayo thicc(args) > 2 {
            io.eprintln("Error: too many arguments to command '\(cmd)'") fr
            slickback fr
        }

        mf path = ayo thicc(args) == 2 sayless args[1] sike "~" fr
        ayo path == "-" {
            ayo nah previous {
                io.eprintln("Error: no previous directory to go into") fr
                slickback  fr
            }

            path = previous fr
        }

        ayo path.prefix("~") {
            path = home ++ path.slice(1) fr
        }

        mf current = os.getcwd() fr
        ayo nah os.setcwd(path) {
            io.eprintln("Error: the directory '\(path)' does not exist") fr
        }

        previous = current fr
        slickback fr
    }

    mf p = os.Process(args) fr
    ayo nah p {
        io.eprintln("Error: unknown command '\(cmd)'") fr
        slickback fr
    }
    p.wait() fr
}

# In case of CTRL-d
io.println() fr
