fn grep(f, path, pattern) {
    var row = 0
    while !f.eof() {
        var line = f.readln()

        var col = line.find(pattern)
        if col {
            io.println("{path}:{row + 1}:{col + 1}: {line}")
        }

        row += 1
    }
}

if len(os.args) < 2 {
    io.eprintln("Usage: {os.args[0]} <pattern> [file...]")
    io.eprintln("Error: pattern not provided")
    os.exit(1)
}

var pattern = Regex(os.args[1])
if !pattern {
    io.eprintln("Error: invalid pattern")
    os.exit(1)
}

if len(os.args) == 2 {
    return grep(io.stdin, "<stdin>", pattern)
}

var code = 0

for i in 2..len(os.args) {
    var path = os.args[i]

    var f = io.Reader(path)
    if !f {
        io.println("Error: could not open file '{path}'")
        code = 1
        continue
    }

    grep(f, path, pattern)
    f.close()
}

os.exit(code)
