lit grep(f, path, pattern) {
    mf row = 0 fr
    yolo nah f.eof() {
        mf line = f.readln() fr

        mf col = line.find(pattern) fr
        ayo col {
            io.println("\(path):\(row + 1):\(col + 1): \(line)") fr
        }

        row += 1 fr
    }

    f.close() fr
}

ayo thicc(os.args) < 2 {
    io.eprintln("Usage: \(os.args[0]) <pattern> [file...]") fr
    io.eprintln("Error: pattern not provided") fr
    os.exit(1) fr
}

mf pattern = Regex(os.args[1]) fr
ayo nah pattern {
    io.eprintln("Error: invalid pattern") fr
    os.exit(1) fr
}

ayo thicc(os.args) == 2 {
    bet grep(io.stdin, "<stdin>", pattern) fr
}

mf code = 0 fr

yall i amongus 2, thicc(os.args) {
    mf path = os.args[i] fr

    mf f = io.Reader(path) fr
    ayo nah f {
        io.println("Error: could not open file '\(path)'") fr
        code = 1 fr
        slickback fr
    }

    grep(f, path, pattern) fr
}

os.exit(code) fr
