var rl = import("raylib");
var GameOfLife = import("GameOfLife");

var GRID = 0x5A524CFF;
var BACKGROUND = 0x282828FF;
var FOREGROUND = 0x89B482FF;

var INTERVAL = 0.1;
var FONT_SIZE = 30;

var width = 800;
var height = 600;

var cell_size = 0;
var padding_x = 0;
var padding_y = 0;

class GameOfLifeRaylib < GameOfLife {
    init(width, height) {
        super.init(width, height);
        this.clock = 0;
        this.paused = false;
    }

    show() {
        width = rl.get_screen_width();
        height = rl.get_screen_height() - FONT_SIZE * 1.2;

        var cw = width / this.width;
        var ch = height / this.height;
        cell_size = cw.min(ch);

        padding_x = (width - this.width * cell_size) / 2;
        padding_y = (height - this.height * cell_size) / 2;

        rl.draw_rectangle(
            padding_x,
            padding_y,
            this.width * cell_size,
            this.height * cell_size,
            BACKGROUND);

        {
            var label = "Click to toggle cell, Space to play/pause";
            rl.draw_text(
                label,
                (width - rl.measure_text(label, FONT_SIZE)) / 2,
                this.height * cell_size + FONT_SIZE * 0.1,
                FONT_SIZE,
                FOREGROUND);
        }

        for i in 0, this.width + 1 {
            var x = padding_x + i * cell_size;
            rl.draw_line(x, 0, x, this.height * cell_size, GRID);
        }

        for i in 0, this.height + 1 {
            var y = padding_y + i * cell_size;
            rl.draw_line(padding_x, y, padding_x + this.width * cell_size, y, GRID);
        }

        for y in 0, this.height {
            for x in 0, this.width {
                if this.get(x, y) {
                    rl.draw_rectangle(
                        padding_x + x * cell_size,
                        padding_y + y * cell_size,
                        cell_size,
                        cell_size,
                        FOREGROUND);
                }
            }
        }
    }
}

rl.init_window(width, height, "Game Of Life");
rl.set_exit_key(ascii.code("Q"));
rl.set_config_flags(rl.FLAG_WINDOW_RESIZABLE);

var gol = GameOfLifeRaylib(20, 20);
gol.glider(2, 2);

while !rl.window_should_close() {
    rl.begin_drawing();
    rl.clear_background(0x181818FF);

    gol.show();

    if !gol.paused {
        gol.clock += rl.get_frame_time();
        if gol.clock >= INTERVAL {
            gol.clock = 0;
            gol.step();
        }
    }

    if rl.is_key_pressed(ascii.code(" ")) {
        gol.paused = !gol.paused;
    }

    if rl.is_mouse_button_released(rl.MOUSE_BUTTON_LEFT) {
        var x = ((rl.get_mouse_x() - padding_x) / cell_size).floor();
        var y = ((rl.get_mouse_y() - padding_y) / cell_size).floor();
        gol.set(x, y, !gol.get(x, y));
    }

    rl.end_drawing();
}

rl.close_window();
