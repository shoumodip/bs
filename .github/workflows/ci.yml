name: CI

on: [push, pull_request]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Linux build
        if: matrix.os == 'ubuntu-latest'
        run: ./build/linux.sh

      - name: macOS build
        if: matrix.os == 'macos-latest'
        run: ./build/macos.sh

      - name: Windows build
        if: matrix.os == 'windows-latest'
        run: |
          call "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
          build\windows.bat
        shell: cmd

      - name: Linux tests
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd tests
          ../build/tests/linux.sh
          ./rere.py replay test.list

      - name: macOS tests
        if: matrix.os == 'macos-latest'
        run: |
          export DYLD_LIBRARY_PATH=$PWD/lib:$DYLD_LIBRARY_PATH
          cd tests
          ../build/tests/macos.sh
          ./rere.py replay test.list

      - name: Windows tests
        if: matrix.os == 'windows-latest'
        run: |
          call "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
          cd tests
          ..\build\tests\windows.bat
          python3 rere.py replay test.list
        shell: cmd

      - name: Linux archive
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        run: |
          name="bs-linux-x86_64"

          rm -r lib/.build
          mkdir $name
          mv bin lib include $name

          zip -r $name.zip $name

      - name: macOS archive
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'macos-latest'
        run: |
          name="bs-macos-arm64"

          rm -r lib/.build
          mkdir $name
          mv bin lib include $name

          zip -r $name.zip $name

      - name: Windows archive
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'windows-latest'
        run: |
          $name="bs-windows-x86_64"

          rm -r lib/.build
          mkdir $name
          Move-Item bin, lib, include -Destination $name

          Compress-Archive -Path $name -DestinationPath "$name.zip"

      - name: Upload build artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-build
          path: |
            bs-linux-x86_64.zip
            bs-macos-arm64.zip
            bs-windows-x86_64.zip

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ubuntu-latest-build/bs-linux-x86_64.zip
            macos-latest-build/bs-macos-arm64.zip
            windows-latest-build/bs-windows-x86_64.zip
